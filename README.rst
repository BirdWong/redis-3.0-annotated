Redis 3.0 源码注释
============================
在原作者的基础上添加了部分适合新手的源码注解
对c语言基础差的人群更加友好
阅读前置条件：C语言基础语法、指针概念

============================
本项目是注释版的 Redis 3.0 源码，
原始代码来自： https://github.com/antirez/redis 。

这份注释是我在创作新版《Redis 设计与实现》期间，
为了了解 Redis 的内部实现而制作的，
所有在书中有介绍的内容，
在源码中都进行了相应的注释。

在注释的过程中，
除了少量空格和空行方面的调整外，
没有对原始代码进行任何其他改动，
最大程度地保证了代码的“原汁原味”。

希望这份注释源码能给大家学习和了解 Redis 带来一点帮助。

另外，
`新版《Redis 设计与实现》 <http://RedisBook.com>`_\ 正在各大网店发售中，
希望大家可以多多支持这本书。

Have fun!

| 黄健宏（huangz）
| 2014 年 6 月 28 日


附录：各个源码文件的作用简介
------------------------------

+-------------------------------------------------------------------+-------------------------------------------------------------------+
| 文件                                                              | 作用                                                              |
+===================================================================+===================================================================+
| ``adlist.c`` 、 ``adlist.h``                                      | 双端链表数据结构的实现。                                          |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``ae.c`` 、 ``ae.h`` 、 ``ae_epoll.c`` 、 ``ae_evport.c`` 、      | 事件处理器，以及各个具体实现。                                    |
| ``ae_kqueue.c`` 、 ``ae_select.c``                                |                                                                   |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``anet.c`` 、 ``anet.h``                                          | Redis 的异步网络框架，内容主要为对 socket 库的包装。              |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``aof.c``                                                         | AOF 功能的实现。                                                  |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``asciilogo.h``                                                   | 保存了 Redis 的 ASCII LOGO 。                                     |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``bio.c`` 、 ``bio.h``                                            | Redis 的后台 I/O 程序，用于将 I/O 操作放到子线程里面执行，        |
|                                                                   | 减少 I/O 操作对主线程的阻塞。                                     |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``bitops.c``                                                      | 二进制位操作命令的实现文件。                                      |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``blocked.c``                                                     | 用于实现 BLPOP 命令和 WAIT 命令的阻塞效果。                       |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``cluster.c`` 、 ``cluster.h``                                    | Redis 的集群实现。                                                |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``config.c`` 、 ``config.h``                                      | Redis 的配置管理实现，负责读取并分析配置文件，                    |
|                                                                   | 然后根据这些配置修改 Redis 服务器的各个选项。                     |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``crc16.c`` 、 ``crc64.c`` 、 ``crc64.h``                         | 计算 CRC 校验和。                                                 |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``db.c``                                                          | 数据库实现。                                                      |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``debug.c``                                                       | 调试实现。                                                        |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``dict.c`` 、 ``dict.h``                                          | 字典数据结构的实现。                                              |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``endianconv.c`` 、 ``endianconv.h``                              | 二进制的大端、小端转换函数。                                      |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``fmacros.h``                                                     | 一些移植性方面的宏。                                              |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``help.h``                                                        | ``utils/generate-command-help.rb`` 程序自动生成的命令帮助信息。   |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``hyperloglog.c``                                                 | HyperLogLog 数据结构的实现。                                      |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``intset.c`` 、 ``intset.h``                                      | 整数集合数据结构的实现，用于优化 SET 类型。                       |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``lzf_c.c`` 、 ``lzf_d.c`` 、 ``lzf.h`` 、 ``lzfP.h``             | Redis 对字符串和 RDB 文件进行压缩时使用的 LZF 压缩算法的实现。    |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``Makefile`` 、 ``Makefile.dep``                                  | 构建文件。                                                        |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``memtest.c``                                                     | 内存测试。                                                        |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``mkreleasehdr.sh``                                               | 用于生成释出信息的脚本。                                          |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``multi.c``                                                       | Redis 的事务实现。                                                |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``networking.c``                                                  | Redis 的客户端网络操作库，                                        |
|                                                                   | 用于实现命令请求接收、发送命令回复等工作，                        |
|                                                                   | 文件中的函数大多为 write 、 read 、 close 等函数的包装，          |
|                                                                   | 以及各种协议的分析和构建函数。                                    |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``notify.c``                                                      | Redis 的数据库通知实现。                                          |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``object.c``                                                      | Redis 的对象系统实现。                                            |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``pqsort.c`` 、 ``pqsort.h``                                      | 快速排序（QuickSort）算法的实现。                                 |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``pubsub.c``                                                      | 发布与订阅功能的实现。                                            |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``rand.c`` 、 ``rand.h``                                          | 伪随机数生成器。                                                  |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``rdb.c`` 、 ``rdb.h``                                            | RDB 持久化功能的实现。                                            |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``redisassert.h``                                                 | Redis 自建的断言系统。                                            |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``redis-benchmark.c``                                             | Redis 的性能测试程序。                                            |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``redis.c``                                                       | 负责服务器的启动、维护和关闭等事项。                              |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``redis-check-aof.c`` 、 ``redis-check-dump.c``                   | RDB 文件和 AOF 文件的合法性检查程序。                             |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``redis-cli.c``                                                   | Redis 客户端的实现。                                              |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``redis.h``                                                       | Redis 的主要头文件，记录了 Redis 中的大部分数据结构，             |
|                                                                   | 包括服务器状态和客户端状态。                                      |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``redis-trib.rb``                                                 | Redis 集群的管理程序。                                            |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``release.c`` 、 ``release.h``                                    | 记录和生成 Redis 的释出版本信息。                                 |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``replication.c``                                                 | 复制功能的实现。                                                  |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``rio.c`` 、 ``rio.h``                                            | Redis 对文件 I/O 函数的包装，                                     |
|                                                                   | 在普通 I/O 函数的基础上增加了显式缓存、以及计算校验和等功能。     |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``scripting.c``                                                   | 脚本功能的实现。                                                  |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``sds.c`` 、 ``sds.h``                                            | SDS 数据结构的实现，SDS 为 Redis 的默认字符串表示。               |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``sentinel.c``                                                    | Redis Sentinel 的实现。                                           |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``setproctitle.c``                                                | 进程环境设置函数。                                                |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``sha1.c`` 、 ``sha1.h``                                          | SHA1 校验和计算函数。                                             |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``slowlog.c`` 、 ``slowlog.h``                                    | 慢查询功能的实现。                                                |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``solarisfixes.h``                                                | 针对 Solaris 系统的补丁。                                         |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``sort.c``                                                        | SORT 命令的实现。                                                 |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``syncio.c``                                                      | 同步 I/O 操作。                                                   |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``testhelp.h``                                                    | 测试辅助宏。                                                      |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``t_hash.c`` 、 ``t_list.c`` 、 ``t_set.c`` 、 ``t_string.c`` 、  | 定义了 Redis 的各种数据类型，以及这些数据类型的命令。             |
| ``t_zset.c``                                                      |                                                                   |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``util.c`` 、 ``util.h``                                          | 各种辅助函数。                                                    |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``valgrind.sup``                                                  | valgrind 的suppression文件。                                      |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``version.h``                                                     | 记录了 Redis 的版本号。                                           |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``ziplist.c`` 、 ``ziplist.h``                                    | ZIPLIST 数据结构的实现，用于优化 LIST 类型。                      |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``zipmap.c`` 、 ``zipmap.h``                                      | ZIPMAP 数据结构的实现，在 Redis 2.6 以前用与优化 HASH 类型，      |
|                                                                   | Redis 2.6 开始已经废弃。                                          |
+-------------------------------------------------------------------+-------------------------------------------------------------------+
| ``zmalloc.c`` 、 ``zmalloc.h``                                    | 内存管理程序。                                                    |
+-------------------------------------------------------------------+-------------------------------------------------------------------+

# 阅读顺序

## 第 1 步：阅读数据结构实现

刚开始阅读 Redis 源码的时候， 最好从数据结构的相关文件开始读起， 因为这些文件和 Redis 中的其他部分耦合最少， 并且这些文件所实现的数据结构在大部分算法书上都可以了解到， 所以从这些文件开始读是最轻松的、难度也是最低的。

下表列出了 Redis 源码中， 各个数据结构的实现文件：

| 文件                                                         | 内容                        |
| ------------------------------------------------------------ | --------------------------- |
| `sds.h` 和 `sds.c`                                           | Redis 的动态字符串实现。    |
| `adlist.h` 和 `adlist.c`                                     | Redis 的双端链表实现。      |
| `dict.h` 和 `dict.c`                                         | Redis 的字典实现。          |
| `redis.h` 中的 `zskiplist` 结构和 `zskiplistNode` 结构， 以及 `t_zset.c` 中所有以 `zsl` 开头的函数， 比如 `zslCreate` 、 `zslInsert` 、 `zslDeleteNode` ，等等。 | Redis 的跳跃表实现。        |
| `hyperloglog.c` 中的 `hllhdr` 结构， 以及所有以 `hll` 开头的函数。 | Redis 的 HyperLogLog 实现。 |

## 第 2 步：阅读内存编码数据结构实现

在阅读完和数据结构有关的文件之后， 接下来就应该阅读内存编码（encoding）数据结构了。

和普通的数据结构一样， 内存编码数据结构基本上是独立的， 不和其他模块耦合， 但是区别在于：

-   上一步要读的数据结构， 比如双端链表、字典、HyperLogLog， 在算法书上或者相关的论文上都可以找到资料介绍。
-   而内存编码数据结构却不容易找到相关的资料， 因为这些数据结构都是 Redis 为了节约内存而专门开发出来的， 换句话说， 这些数据结构都是特制（adhoc）的， 除了 Redis 源码中的文档之外， 基本上找不到其他资料来了解这些特制的数据结构。

不过话又说回来， 虽然内存编码数据结构是 Redis 特制的， 但它们基本都和内存分配、指针操作、位操作这些底层的东西有关， 读者只要认真阅读源码中的文档， 并在有需要时， 画图来分析这些数据结构， 那么要完全理解这些内存编码数据结构的运作原理并不难， 当然这需要花一些功夫。

下表展示了 Redis 源码中， 各个内存编码数据结构的实现文件：

| 文件                       | 内容                           |
| -------------------------- | ------------------------------ |
| `intset.h` 和 `intset.c`   | 整数集合（intset）数据结构。   |
| `ziplist.h` 和 `ziplist.c` | 压缩列表（zip list）数据结构。 |

## 第 3 步：阅读数据类型实现

在完成以上两个阅读步骤之后， 我们就读完了 Redis 六种不同类型的键（字符串、散列、列表、集合、有序集合、HyperLogLog）的所有底层实现结构了。

接下来， 为了知道 Redis 是如何通过以上提到的数据结构来实现不同类型的键， 我们需要阅读实现各个数据类型的文件， 以及 Redis 的对象系统文件， 这些文件包括：

| 文件                                             | 内容                           |
| ------------------------------------------------ | ------------------------------ |
| `object.c`                                       | Redis 的对象（类型）系统实现。 |
| `t_string.c`                                     | 字符串键的实现。               |
| `t_list.c`                                       | 列表键的实现。                 |
| `t_hash.c`                                       | 散列键的实现。                 |
| `t_set.c`                                        | 集合键的实现。                 |
| `t_zset.c` 中除 `zsl` 开头的函数之外的所有函数。 | 有序集合键的实现。             |
| `hyperloglog.c` 中所有以 `pf` 开头的函数。       | HyperLogLog 键的实现。         |

## 第 4 步：阅读数据库实现相关代码

在读完了 Redis 使用所有底层数据结构， 以及 Redis 是如何使用这些数据结构来实现不同类型的键之后， 我们就可以开始阅读 Redis 里面和数据库有关的代码了， 它们分别是：

| 文件                                                   | 内容                             |
| ------------------------------------------------------ | -------------------------------- |
| `redis.h` 文件中的 `redisDb` 结构， 以及 `db.c` 文件。 | Redis 的数据库实现。             |
| `notify.c`                                             | Redis 的数据库通知功能实现代码。 |
| `rdb.h` 和 `rdb.c`                                     | Redis 的 RDB 持久化实现代码。    |
| `aof.c`                                                | Redis 的 AOF 持久化实现代码。    |

选读

Redis 有一些独立的功能模块， 这些模块可以在完成第 4 步之后阅读， 它们包括：

| 文件                                                         | 内容                                            |
| ------------------------------------------------------------ | ----------------------------------------------- |
| `redis.h` 文件的 `pubsubPattern` 结构，以及 `pubsub.c` 文件。 | 发布与订阅功能的实现。                          |
| `redis.h` 文件的 `multiState` 结构以及 `multiCmd` 结构， `multi.c` 文件。 | 事务功能的实现。                                |
| `sort.c`                                                     | `SORT` 命令的实现。                             |
| `bitops.c`                                                   | `GETBIT` 、 `SETBIT` 等二进制位操作命令的实现。 |

## 第 5 步：阅读客户端和服务器的相关代码

在阅读完数据库实现代码， 以及 RDB 和 AOF 两种持久化的代码之后， 我们可以开始阅读客户端和 Redis 服务器本身的实现代码， 和这些代码有关的文件是：

| 文件                                                         | 内容                                                         |
| ------------------------------------------------------------ | ------------------------------------------------------------ |
| `ae.c` ，以及任意一个 `ae_*.c` 文件（取决于你所使用的多路复用库）。 | Redis 的事件处理器实现（基于 Reactor 模式）。                |
| `networking.c`                                               | Redis 的网络连接库，负责发送命令回复和接受命令请求， 同时也负责创建/销毁客户端， 以及通信协议分析等工作。 |
| `redis.h` 和 `redis.c` 中和单机 Redis 服务器有关的部分。     | 单机 Redis 服务器的实现。                                    |

如果读者能完成以上 5 个阅读步骤的话， 那么恭喜你， 你已经了解了单机的 Redis 服务器是怎样处理命令请求和返回命令回复， 以及是 Redis 怎样操作数据库的了， 这是 Redis 最重要的部分， 也是之后继续阅读多机功能的基础。

选读

Redis 有一些独立的功能模块， 这些模块可以在完成第 5 步之后阅读， 它们包括：

| 文件          | 内容                 |
| ------------- | -------------------- |
| `scripting.c` | Lua 脚本功能的实现。 |
| `slowlog.c`   | 慢查询功能的实现。   |
| `monitor.c`   | 监视器功能的实现。   |

## 第 6 步：阅读多机功能的实现

在弄懂了 Redis 的单机服务器是怎样运作的之后， 就可以开始阅读 Redis 多机功能的实现代码了， 和这些功能有关的文件为：

| 文件            | 内容                        |
| --------------- | --------------------------- |
| `replication.c` | 复制功能的实现代码。        |
| `sentinel.c`    | Redis Sentinel 的实现代码。 |
| `cluster.c`     | Redis 集群的实现代码。      |

注意， 因为 Redis Sentinel 用到了复制功能的代码， 而集群又用到了复制和 Redis Sentinel 的代码， 所以在阅读这三个模块的时候， 记得先阅读复制模块， 然后阅读 Sentinel 模块， 最后才阅读集群模块， 这样理解起来就会更得心应手。